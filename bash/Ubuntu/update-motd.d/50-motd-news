#!/bin/sh
[ -r /etc/default/motd-news ] && . /etc/default/motd-news

[ "$ENABLED" = "1" ] || exit 0

[ -n "$URLS" ] || URLS="https://motd.ubuntu.com"
[ -n "$WAIT" ] || WAIT=5
[ -n "$CACHE" ] || CACHE="/var/cache/motd-news"
[ "$1" = "--force" ] && FORCED=1

safe_print() {
	cat "$1" | head -n 10 | tr -d '\000-\011\013\014\016-\037' | cut -c -80
}

if [ "$FORCED" != "1" ]; then
  	if [ -r $CACHE ]; then
		echo
		safe_print $CACHE
	elif [ "$(id -u)" -eq 0 ]; then
		: > $CACHE
	fi
	exit 0
fi

[ -x /usr/bin/wget ] || exit 0

NEWS=$(mktemp) || exit 1
ERR=$(mktemp) || exit 1
CLOUD=$(mktemp) || exit 1
trap "rm -f $NEWS $ERR $CLOUD" HUP INT QUIT ILL TRAP KILL BUS TERM

wget_ver="$(dpkg -l wget | awk '$1 == "ii" { print($3); exit(0); }')"

. /etc/lsb-release
lsb=$(echo "$DISTRIB_DESCRIPTION" | sed -e "s/ /\//g")
codename="$DISTRIB_CODENAME"

platform="$(uname -o)/$(uname -r)/$(uname -m)"
arch="$(uname -m)"
cpu="$(grep -m1 "^model name" /proc/cpuinfo | sed -e "s/.*: //" -e "s:\s\+:/:g")"
cloud_id="unknown"
if [ -x /usr/bin/cloud-id ]; then
    /usr/bin/cloud-id > "$CLOUD" 2>/dev/null
    if [ "$?" -eq "0" ]; then
        cloud_id=$(cut -c -40 "${CLOUD}" | tr -c -d '[:alnum:]')
        if [ -z "${cloud_id}" ]; then
            cloud_id="unknown"
        fi
    fi
fi

USER_AGENT="wget/$wget_ver $lsb $platform $cpu cloud_id/$cloud_id"

for u in $URLS; do
	case $u in
		https://*)
			true
		;;
		https://motd.ubuntu.com)
			u="$u/$codename/$arch"
		;;
		*)
			continue
		;;
	esac
	[ "$FORCED" = "1" ] && WAIT=60
	result=0
	not_found_is_ok=0
	wget --timeout "$WAIT" -U "$USER_AGENT" -O- --content-on-error "$u" >"$NEWS" 2>"$ERR" || result=$?
	if [ $result -eq 8 ]; then
		if grep -q "ERROR 404" "$ERR"; then
			not_found_is_ok=1
		fi
	fi
	if [ $result -eq 0 ] || [ $not_found_is_ok -eq 1 ]; then
		echo
		safe_print "$NEWS"
		safe_print "$NEWS" 2>/dev/null >$CACHE || true
	else
		: > "$CACHE"
 	fi
done
rm -f "$NEWS" "$ERR" "$CLOUD"
exit 0
